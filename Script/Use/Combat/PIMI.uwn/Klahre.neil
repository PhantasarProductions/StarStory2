// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Use/Combat/PIMI.uwn/Klahre.neil
// (c) Jeroen Broks, 2022, 2023, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 23.09.01
// End License Information
Var Ret = new LinkedList()


group kit_uBox
	const int X = 100
	const int Y =  90
	const int W = Screen.W - 200
	const int H = Screen.H - 380
end

Class __PIMI_ARMS Extends Stage
	Static var Card
	Static var ch


	static var SelItem
	
	static var M = Any.Mouse
	
	void Draw()
		__Black
		Graphics.Alpha(100)
		Graphics.Rect(kit_uBox.x,kit_uBox.y,kit_uBox.w,kit_uBox.h)
		Graphics.Alpha(255)
		Abl.Klahre.View(kit_uBox,ch,"Combat_UserMenu")
		Any.Mouse.Draw()
		if M.ML && (M.MX<kit_uBox.x || M.MY<kit_ubox.y || M.MX>kit_ubox.x+kit_ubox.w || M.MY>kit_ubox.y+kit_ubox.h)
			Stage.Current = nil
		end
	end
	
	Void Update()
	End
End
var PIMI_ARMS = new __PIMI_ARMS()

Void ARM_Action(string armtag,_ARM)
	var xarg = {["KlareARM"]=true,["XCard"]=_ARM.XRepeat, ["XPower"]=_ARM.XPower}
	var act = new Action(armTag,"Klahre",{},xarg)
	print(serialize("ARM Klahre.\nArgs",xarg))
	PITAR.ComeToMe(act,FlowCombat.Cards.Lijst[1])
End
Init
	abl.Klahre.Action=ARM_ACTION
End


Bool HasAmmo(string ch,Var Card)
	Return RPGChar[ch].Points.Ammo.Have>0
End

Bool HasNoAmmo(string ch,Var Card)
	Return RPGChar[Ch].Points.Ammo.Have<RPGChar[Ch].Points.Ammo.Maximum
End

Void Shoot(string ch,Var Card)
	Var act = new Action("ACT_SHOOT",Ch,{},{["UseAmmo"]=true})
	PITAR.ComeToMe(act,Card)
	//Lua.error("Shooting not yet implemented")
End

Void Reload(string ch,Var Card)
	//Lua.error("Reload not yet implemented")
	Var act = new Action("ACT_RELOAD",Ch,{ch},{})
	FlowCombat.Execution.ComeToMe(Act,Card)
End

Void ARMS(string ch,Var Card)
	//Lua.error("ARMS not yet implemented")
	Stage.Current = PIMI_ARMS
End


Init
	Ret.AddLast(new PIMI("Shoot",Shoot,HasAmmo,true))
	Ret.AddLast(new PIMI("Reload",Reload,HasNoAmmo,true))
	Ret.AddLast(new PIMI("ARMS",ARMS))
	Ret.AddLast(new PIMI("Items",PIMI.ChPIMI.ZItems))
	Ret.AddLast(new PIMI("Guard",PIMI.ChPIMI.ZGuard))
End

Return Ret