// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Use/Combat/PIMI.uwn/Ashley.neil
// (c) Jeroen Broks, 2022, 2023, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 23.09.01
// End License Information


//group Ash_uBox
//	const int X = 100
//	const int Y = 100
//	const int W = Screen.W - 200
//	const int H = Screen.H - 400
//end

Init
	Print(PIMI.ChPIMI.Klahre," <-- Just to make sure Ash_uBox is also loaded")
End


group Ash_uBox
	const int X = 100
	const int Y =  90
	const int W = Screen.W - 200
	const int H = Screen.H - 380
end


Var Rage = Abl.Ashley
Var Ret = new LinkedList()

Void Attack(String Ch,Var Card)	
	For a in Rage.List.Each
		if a.NeedMore<=0 && (!a.Unlocked)
			var act = new Action(a.Tag,"Ashley",{},{["AshleyLearn"]=a.NeedToUnlock})
			CSayF("Ashley is about to learn '%s' (%d)",a.Tag,a.NeedToUnlock)
			PITAR.ComeToMe(act,Card)
			Return
		end
	End
	Var act = new Action("ACT_ATTACKASHLEY",Ch,{})
	PITAR.ComeToMe(act,Card)
End

Class __PIMI_Rage Extends Stage
	Static var Card
	Static var ch


	static var SelItem
	static var M = Any.Mouse
	
	void Draw()	
		__Black
		Graphics.Alpha(100)
		Graphics.Rect(Ash_uBox.x,Ash_uBox.y,Ash_uBox.w,Ash_uBox.h)
		Graphics.Alpha(255)
		Rage.View(Ash_uBox,ch,"Combat_UserMenu")
		Any.Mouse.Draw()
		if M.ML && (M.MX<Ash_uBox.x || M.MY<Ash_ubox.y || M.MX>Ash_ubox.x+Ash_ubox.w || M.MY>Ash_ubox.y+Ash_ubox.h)
			Stage.Current = nil
		end
	end
	
	Void Update()
	End
End
var PIMI_Rage = new __PIMI_Rage()

Void RageSelect(_Act)
	var act = new Action(_Act.Tag,"Ashley",{},{["DeductAP"]=true,["APCost"]=_Act.APCost,["Ashley"]=_Act,["XPower"]=math.ceil(_Act.PowerUp*(0.1*_Act.PowerUp))})
	PITAR.ComeToMe(act,FlowCombat.Cards.Lijst[1])
End

Void Rage_Item(String Ch,Var Card)
	Stage.Current = PIMI_Rage
End

Init
	Rage.Chosen = RageSelect
	Ret.AddLast(new PIMI("Attack",Attack))
	Ret.AddLast(new PIMI("Rage",Rage_item))
	Ret.AddLast(new PIMI("Items",PIMI.ChPIMI.ZItems))
	Ret.AddLast(new PIMI("Guard",PIMI.ChPIMI.ZGuard))
End

Return Ret