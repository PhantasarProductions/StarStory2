// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Use/Combat/Arena/EFU.neil
// (c) Jeroen Broks, 2023, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 23.04.27
// End License Information

#use "libs/linkedlist"
#use "libs/xmath"


Module Class
	
	static Var SubArena 
	static Var SubArenaData
	
	Static Void ArenaInit()
		CSayF("Arena Init")
		SubArenaData = SubArenaData || {}
		SubArena     = SubArena || {}
		SubArena["#001"]    = "PhanDung"
		SubArena["#002"]    = "Muerte"
		SubArena["#003"]    = "Slums"
		SubArena["#004"]    = "PhanDung"
		SubArena["#005"]    = "Feo"
		SubArena["SECRET1"] = "Feo" 
	End
	
	Static Get Var SAD
		if !SubArena
			ArenaInit()
		End
		if !SubArena[Lnk.Map.Layer]
			CSayF("No value for SubArena['%s']",Lnk.Map.Layer)
			For k,v in spairs(SubArena)
				CSayF("%s %s = '%s'",Lua.type(v),k,Lua.tostring(v))
			end
			Lua.Error(Lnk.Map.Layer.." has no arena data")
		end
		if !SubArenaData[Lnk.Map.Layer]
			SubArenaData[Lnk.Map.Layer] = NeilUse("Script/Use/Combat/Arena/"..SubArena[Lnk.Map.Layer])
			SubArenaData[Lnk.Map.Layer].Load()
		End
		Return SubArenaData[Lnk.Map.Layer]
	End
	
	Constructor
		ArenaInit()
	End
	
	Static Void NewBattle()
		SAD.NewBattle()
	End
	
	Static Void Load()
		SAD.Load()
	End
	
	Static Void UnLoad()
		SAD.UnLoad()
	End
		
	Static Void Draw()
		SAD.Draw()
	End
	
End