// License Information:
// src/Tricky Script/Script/Use/Any.uwn/IAA.neil
// Version: 22.04.20
// Copyright (C) 2022 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
// Item Action Ability

Var GData = GINIE.Obtain("INVENTORY")
Table IAA_Class = GINIE.LoadNew("Data/MyData_ClassFile_IAA.Ini")

Table IAA_Data

Class True_IAA
End

QuickMeta ItemSlot
	index
		Lua.assert(Lua.type(key)=="number","Item slot index must be a number!")
		Lua.assert(key>=1 && key<=Any.Caps.InvItemSlots,sprintf("Item slot #%d is out of bounds",key))
		string slottag = sprintf("SLOT%03d",key)
		string itm = GData.Value(slottag,"Item")
		int num = Lua.tonumber(GData.Value(slottag,"Numb")) || 0
		return itm,num
	end
	
	newindex
		Lua.assert(Lua.type(key)=="number","Item slot index must be a number!")
		Lua.assert(key>=1 && key<=Any.Caps.InvItemSlots,sprintf("Item slot #%d is out of bounds",key))
		string slottag = sprintf("SLOT%03d",key)
		switch Lua.type(value)
			case "string"
				GData.Value(slottag,"Item",value)
			case "number"
				GData.Value(slottag,"Numb",sprint("%d",math.floor(math.min(0,math.max(Any.InvItemsPerSlot,value)))))
			case "table"
				ItemSlot[key] = value[1]
				ItemSlot[key] = value[2]
			default
				Lua.error("ItemSlot cannot handle types of type "..Lua.type(value))
		end
	end
	
Bool Give(String Item,Int N=1)
	Lua.error("ITEM GIVE routine not yet scripted!")
End

	
Var GetIAA(String F)
	string Rec="REC:"..F
	Var Data = GINIE.LoadNew("Data/IAA/"..F..".INI","ITEM:"..f)
	Var GIndex(s,String Key)
		Key = Key:upper()
		Switch(Key)
			Case "GIVE"
				Return Give(F)
			Default
				Switch IAA_Class.Value("CLASS",Key):upper()
					case "STRING"
						return IAA_Data.Value(Rec,Key)
					Case "INT" "NUMBER"
						return Lua.tonumber(IAA_DATA.Value("REC:"..F)) || 0
					case "BOOLEAN"
						return IAA_Data.Value(Rec,Key):upper()=="TRUE"
					case ""
						Lua.error("IAA record does not have field: "..key)
					Default
						Lua.error("IAA: I do not know how to handle MyData field: "..key..". Type unknown: ".. IAA_Class.Value("CLASS",Key))
				End
		End
	End
End

QuickMeta _module_IAA
	index
		Key = Key:upper()
		Switch Key
			Case "SLOT" "INVENTORYSLOT" "ITEMSLOT"
				Return ItemSlot
			Case "GIVE"
				Return Give
			Default
				// Get item
				IAA_Data[Key] = IAA_Data[Key] || GetIAA(Key)
				Return IAA_Data[Key]
		End
	end
End




Init
	IAA_Data = {}
	If GData.Value("ALGEMEEN","SETUP")!="SET"
		ItemSlot[1]="ITM_ADHBANDAGE"
		ItemSlot[1]=12 div __skill
		ItemSlot[2]="ITM_BANDAGE"
		ItemSlot[2]=6 div __skill
		GData.Value("ALGEMEEN","SETUP","SET")
	End
End


Return _module_IAA