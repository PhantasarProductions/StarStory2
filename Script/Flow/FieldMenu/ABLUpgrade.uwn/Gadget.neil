// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Flow/FieldMenu/ABLUpgrade.uwn/Gadget.neil
// (c) Jeroen Broks, 2022, 2023, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 23.01.23
// End License Information
 // License Information:
// **********************************************
// 
// src/Tricky Script/Script/Flow/FieldMenu/ABLUpgrade.uwn/Gadget.neil
// (c) Jeroen Broks, 2022, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 22.08.16
// End License Information

#use "libs/xmath"

var Upgrades

Init
	Upgrades = {}
	// Double Power
	Upgrades.DPower = {}
	Upgrades.DPower.Show = "Enbl Double Power"
	Upgrades.DPower.Key = "Double"
	Upgrades.DPower.Value = True
	Bool _RD(G)
		return G.Double
	End
	Upgrades.DPower.Reject = _RD
	Int _PD(G)
		return G.Abl.GadgetInstallPrice*__skill
	End
	Upgrades.DPower.Price = _PD 
	
	// Spread
	Upgrades.Spread = {}
	Upgrades.Spread.Show = "Enbl Spread"
	Upgrades.Spread.Key = "Spread"
	Upgrades.Spread.Value = True
	Bool _RS(G)
		return G.Spread
	End
	Upgrades.Spread.Reject = _RS
	Int _PS(G)
		return G.Abl.GadgetInstallPrice*(__skill^2)
	End
	Upgrades.Spread.Price = _PS 
	
	// XCard
	Upgrades.XCard = {}
	Upgrades.XCard.Show = "Enbl extra card"
	Upgrades.XCard.Key    = "XCards"
	Upgrades.XCard.Value  = 1
	Bool _RXC(G)
		Return G.XCards>=G.AllowXCards
	End
	Upgrades.XCard.Reject = _RXC
	Int _PXC(G)
		Return math.floor((G.Abl.GadgetInstallPrice*(__skill+(__skill / 10)))*(G.XCards+1))
	End
	Upgrades.XCard.Price  = _PXC
	
	// Na controle
	for k,v in pairs(Upgrades)
		Lua.assert(v.Price,"No price function on: "..k)
	End
End

Void Upgrade(SG,string t,ubox,prnt)
	int lx = ubox.x + 15
	int rx = (ubox.w+ubox.x)-30
	int y = 15 + ubox.y	
	static var MS = Any.Mouse
	For K,U in spairs(Upgrades)
		//CSayF("%6s> Allow: (%s)%s; Reject: (%s)%s; -> %s",K,Lua.type(SG["Allow"..U.Key]),SG["Allow"..U.Key] , Lua.type(U.Reject(SG)),U.Reject(SG), Lua.tostring(SG["Allow"..U.Key] && (!U.Reject(SG))))
		If SG["Allow"..U.Key] && (!U.Reject(SG))			
			int price = U.Price(SG)
			if MS.MX>lx && MS.MY>y && MS.MX<rx && MS.MY<y+30
				number c = math.abs(xmath.sin(FPS.Ticks div 5))
				Graphics.Color(math.floor(c*255),math.floor(c*180),0)
				Graphics.Rect(ubox.x,y,ubox.w,30)
				if MS.ML && Any.Aurina.Pay(price)
					switch Lua.type(U.Value)
						case "number"
							SG[U.Key] += U.Value
						case "boolean"
							SG[U.Key] = U.Value
						default
							Lua.error("Gadget upgrade value error ("..k.."/"..Lua.type(U.Value).."/"..Lua.tostring(U.Value)..")")
					end
				end
			end
			__White
			prnt.fnt.Text(U.Show,lx,y)
			if __Cash>=price
				__Green
			Else
				__Red
			End
			prnt.fnt.Text(sprintf("%d Au",price),rx,y,1)
			y += 30
		End
	End
End

String TR(string s,int l)
	if #s<=l
		return s
	else
		return left(s,l-3).."..."
	end
end

Void Install(G,string t,ubox,prnt)
	int lx = ubox.x + 15
	int rx = (ubox.w+ubox.x)-30
	int y = 15 + ubox.y

	For GI in G.Items.Each
		if !GI.Unlocked
			if any.Mouse.MX>lx && any.Mouse.MX<rx && any.Mouse.MY>y && any.Mouse.MY<y+30
				__Black
				Graphics.Rect(lx,y,ubox.w-30,30)
				if Any.Mouse.ML && Any.Aurina.Pay(GI.Abl.GadgetInstallPrice)
					GI.Unlocked = true
				End
			end
			__white
			prnt.fnt.Text("Inst '"..TR(GI.Name,15).."'",lx,y)
			if GI.Abl.GadgetInstallPrice<=__Cash
				__Green
			else
				__Red
			end
			prnt.fnt.Text(sprintf("%d Au",GI.Abl.GadgetInstallPrice),rx,y,1)
			y+=30
		end
	end
end

Void _GR(string t,ubox,prnt)
	Var G = Abl[t].Stuff
	If G.SelectedItem
		Upgrade(G.SelectedItem,t,ubox,prnt)
	Else
		Install(G,t,ubox,prnt)
	End
	__White
	prnt.fnt.text(sprintf("Aurinas: %d",__Cash),ubox.x+16,(ubox.y+ubox.h)-15,0,1)
End

Return _GR