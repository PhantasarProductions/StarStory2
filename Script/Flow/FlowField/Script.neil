// License Information:
// src/Tricky Script/Script/Flow/FlowField/Script.neil
// Version: 22.05.13
// Copyright (C) 2022 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

	Get Bool HasAQS
		Return FlowField.Map.KthuraMap.Meta.UseAQS:upper()=="YES"
	End

	Get Bool HasNeil
		Return FlowField.Map.KthuraMap.Meta.UseNeil:upper()=="YES"
	End
	
	Void RunAQS(string chunk,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
		Lua.assert(HasAQS,"Call to AQS done, while no AQS is present")
		Lua.assert(AQS.HasChunk("BEHAVIOR",Chunk),"Behavior AQS to non-existent chunk: "..Chunk)
		//CSayF("Calling behavior chunk: %s",Chunk)
		AQS.Call("BEHAVIOR",Chunk,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
	End
	
	Void RunNeil(string func,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
		Lua.assert(HasNeil,"Call to AQS done, while no AQS is present")
		State.Call("MAPSCRIPT",func,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
	End
	
	Void Run(string fc,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
		If HasAQS && AQS.HasChunk("BEHAVIOR",fc)
			RunAQS(fc,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
		ElseIf HasNeil
			RunNeil(fc,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
		Else
			Lua.error("No way known to run: "..fc)
		End
	End

	Void CBLoadMap(string MapBundle)
		If HasAQS
			CSay("= Loading AQS")
			AQS.Load("BEHAVIOR","Kthura/"..FlowField.Map.LoadedMap.."/Behavior")
		End
		If HasNeil
			CSay("= Loading Neil Map Script")
			State.Load("MAPSCRIPT","Kthura/"..FlowField.Map.LoadedMap.."/MapScript.Neil")
		End
		If HasAQS
			CSay("= Executing AQS Chunk LOAD")
			AQS.Call("BEHAVIOR","LOAD")
		End			
	End

End